/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1812                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

// X:Y = 10 : 20, 50 : 100

X0	-10;
Y0	0;
Z0	-0.001;

X1	10;
Y1	20;
Z1	0.001; //0.001

nx	100; 
ny	100;
nz	1;

//Dummy region
X2  -1.6;
Y2  -8.8;
Z2  -0.01;

X3  1.6;
Y3  1.8;
Z3  0.01;

dx  16;
dy  53;
dz  1;



vertices
(
    ($X0 $Y0 $Z0)
    ($X1 $Y0 $Z0)
    ($X1 $Y1 $Z0)
    ($X0 $Y1 $Z0)
    ($X0 $Y0 $Z1)
    ($X1 $Y0 $Z1)
    ($X1 $Y1 $Z1)
    ($X0 $Y1 $Z1)

    ($X2 $Y2 $Z2)
    ($X3 $Y2 $Z2)
    ($X3 $Y3 $Z2)
    ($X2 $Y3 $Z2)
    ($X2 $Y2 $Z3)
    ($X3 $Y2 $Z3)
    ($X3 $Y3 $Z3)
    ($X2 $Y3 $Z3)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($nx $ny $nz) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) ($dx $dy $dz) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    frontAndbackBackground
    {
        type empty;
        faces
        ( ////밥먹고와서 여기부터 하면 됨//
            (0 3 2 1) //
            (4 5 6 7) //
            (8 11 10 9) //
            (12 13 14 15) //
            
        );
    }
    walls
    {
        type wall;
        faces
        (
            (2 6 5 1)
            (0 4 7 3)
            (1 5 4 0)
            //
            (10 14 13 9)
            (8 12 15 11)
            (9 13 12 8)
        );
    }
    top 
    {
        type patch;
        faces
        (
             //bottom
            (2 3 7 6)
            (10 11 15 14)
        );
    }
);

// ************************************************************************* //
